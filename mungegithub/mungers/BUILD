package(default_visibility = ["//visibility:public"])

licenses(["notice"])

load(
    "@io_bazel_rules_go//go:def.bzl",
    "go_library",
    "go_test",
)

go_test(
    name = "go_default_test",
    srcs = [
        "assign-fixes_test.go",
        "check-labels_test.go",
        "cherrypick-auto-approve_test.go",
        "cla_test.go",
        "comment-deleter-jenkins_test.go",
        "inactive-review-handler_test.go",
        "issue-creator_test.go",
        "path_label_test.go",
        "release-note-label_test.go",
        "sig-mention-handler_test.go",
        "stale-green-ci_test.go",
        "submit-queue-batch_test.go",
        "submit-queue_test.go",
        "triage-filer_test.go",
    ],
    data = [
        "//mungegithub:configs",
    ],
    library = ":go_default_library",
    tags = ["automanaged"],
    deps = [
        "//mungegithub/admin:go_default_library",
        "//mungegithub/github:go_default_library",
        "//mungegithub/github/testing:go_default_library",
        "//mungegithub/mungers/e2e:go_default_library",
        "//mungegithub/mungers/e2e/fake:go_default_library",
        "//mungegithub/mungers/matchers/comment:go_default_library",
        "//mungegithub/mungers/mungerutil:go_default_library",
        "//mungegithub/mungers/testowner:go_default_library",
        "//vendor:github.com/golang/glog",
        "//vendor:github.com/google/go-github/github",
        "//vendor:k8s.io/contrib/test-utils/utils",
        "//vendor:k8s.io/kubernetes/pkg/util/clock",
    ],
)

go_library(
    name = "go_default_library",
    srcs = [
        "approval-handler.go",
        "assign-fixes.go",
        "block_paths.go",
        "blunderbuss.go",
        "bulk-lgtm.go",
        "check-labels.go",
        "cherrypick-auto-approve.go",
        "cherrypick-clear-after-merge.go",
        "cherrypick-label-unapproved.go",
        "cherrypick-must-have-milestone.go",
        "cherrypick-queue.go",
        "cla.go",
        "close-stale.go",
        "comment-deleter.go",
        "comment-deleter-jenkins.go",
        "doc.go",
        "docs-no-retest.go",
        "inactive-review-handler.go",
        "issue-categorizer.go",
        "issue-creator.go",
        "lgtm_after_commit.go",
        "mungers.go",
        "nag-flake-issues.go",
        "needs_rebase.go",
        "old-test-getter.go",
        "path_label.go",
        "publisher.go",
        "publisher_logger.go",
        "release-note-label.go",
        "sig-mention-handler.go",
        "size.go",
        "stale-green-ci.go",
        "stale-pending-ci.go",
        "submit-queue.go",
        "submit-queue-batch.go",
        "triage-filer.go",
    ],
    tags = ["automanaged"],
    deps = [
        "//mungegithub/admin:go_default_library",
        "//mungegithub/features:go_default_library",
        "//mungegithub/github:go_default_library",
        "//mungegithub/mungers/approvers:go_default_library",
        "//mungegithub/mungers/e2e:go_default_library",
        "//mungegithub/mungers/e2e/fake:go_default_library",
        "//mungegithub/mungers/matchers:go_default_library",
        "//mungegithub/mungers/matchers/comment:go_default_library",
        "//mungegithub/mungers/matchers/event:go_default_library",
        "//mungegithub/mungers/mungerutil:go_default_library",
        "//mungegithub/mungers/shield:go_default_library",
        "//mungegithub/mungers/testowner:go_default_library",
        "//vendor:github.com/NYTimes/gziphandler",
        "//vendor:github.com/golang/glog",
        "//vendor:github.com/google/go-github/github",
        "//vendor:github.com/prometheus/client_golang/prometheus",
        "//vendor:github.com/prometheus/client_golang/prometheus/promhttp",
        "//vendor:github.com/spf13/cobra",
        "//vendor:golang.org/x/oauth2",
        "//vendor:k8s.io/contrib/test-utils/utils",
        "//vendor:k8s.io/kubernetes/pkg/util/clock",
        "//vendor:k8s.io/kubernetes/pkg/util/sets",
        "//vendor:k8s.io/kubernetes/pkg/util/yaml",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//mungegithub/mungers/approvers:all-srcs",
        "//mungegithub/mungers/e2e:all-srcs",
        "//mungegithub/mungers/flakesync:all-srcs",
        "//mungegithub/mungers/matchers:all-srcs",
        "//mungegithub/mungers/mungerutil:all-srcs",
        "//mungegithub/mungers/shield:all-srcs",
        "//mungegithub/mungers/testowner:all-srcs",
    ],
    tags = ["automanaged"],
)
